<?xml version="1.0" encoding="UTF-8"?>
<project default="all" name="OpenRTPツールのフィーチャビルド、およびサイト更新">

	<taskdef resource="net/sf/antcontrib/antlib.xml" />
	<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" />

	<property environment="env" />
	<property file="build.properties" />

	<property name="eclipse.dir" value="eclipse" />
	<property name="launcher.id" value="org.eclipse.equinox.launcher" />

	<property name="temp.build.dir" value="build" />
	<property name="temp.plugins.dir" value="build/plugins" />
	<property name="temp.features.dir" value="build/features" />
	<property name="temp.site.dir" value="build/site" />
	<property name="temp.backup.dir" value="backup" />
	


	<!-- 更新サイトに関する設定 -->
	<property name="site_proj.dir" value="${basedir}/openrtp_site" />
	<property name="site_proj.plugins.dir"
			  value="${site_proj.dir}/plugins"  />
	<property name="site_proj.features.dir"
			  value="${site_proj.dir}/features"  />

	<property name="update_site.name" value="OpenRTP Updates" />

	<!-- フィーチャ(RTCBuilder)に関する設定 -->
	<property name="rtcb_feature.id" value="jp.go.aist.rtm.rtcbuilder.feature" />
	<property name="rtcb_plugin.id" value="jp.go.aist.rtm.rtcbuilder" />
	<property name="rtcb_feature.plugins.list" value="
		 jp.go.aist.rtm.rtcbuilder
		,jp.go.aist.rtm.rtcbuilder.java
		,jp.go.aist.rtm.rtcbuilder.python
		,jp.go.aist.rtm.rtcbuilder.lua
		,jp.go.aist.rtm.rtcbuilder.processing
		,jp.go.aist.rtm.toolscommon.profiles
	" />

	<!-- フィーチャ(RTCBuilder Language Pack)に関する設定 -->
	<property name="rtcb_nl_feature.id" value="jp.go.aist.rtm.rtcbuilder.nl1.feature" />
	<property name="rtcb_nl_plugin.id" value="jp.go.aist.rtm.rtcbuilder.nl1" />
	<property name="rtcb_nl_feature.plugins.list" value="
		 jp.go.aist.rtm.rtcbuilder.nl1
		,jp.go.aist.rtm.toolscommon.profiles.nl1
	" />

	<!-- フィーチャ(RTSystemEditor)に関する設定 -->
	<property name="rtse_feature.id" value="jp.go.aist.rtm.rtsystemeditor.feature" />
	<property name="rtse_plugin.id" value="jp.go.aist.rtm.systemeditor" />
	<property name="rtse_feature.plugins.list" value="
		 jp.go.aist.rtm.systemeditor
		,jp.go.aist.rtm.nameserviceview
		,jp.go.aist.rtm.repositoryView
		,jp.go.aist.rtm.toolscommon
		,jp.go.aist.rtm.toolscommon.profiles
	" />

	<!-- フィーチャ(RTSystemEditor Langurage Pack)に関する設定 -->
	<property name="rtse_nl_feature.id" value="jp.go.aist.rtm.rtsystemeditor.nl1.feature" />
	<property name="rtse_nl_plugin.id" value="jp.go.aist.rtm.systemeditor.nl1" />
	<property name="rtse_nl_feature.plugins.list" value="
		 jp.go.aist.rtm.systemeditor.nl1
		,jp.go.aist.rtm.nameserviceview.nl1
		,jp.go.aist.rtm.repositoryView.nl1
		,jp.go.aist.rtm.toolscommon.nl1
		,jp.go.aist.rtm.toolscommon.profiles.nl1
	" />


	<target name="init.plugins">
		<delete dir="${temp.plugins.dir}" />
		<mkdir dir="${temp.plugins.dir}" />
	</target>

	<target name="init.features">
		<delete dir="${temp.features.dir}" />
		<mkdir dir="${temp.features.dir}" />
	</target>

	<target name="init.site">
		<delete dir="${temp.site.dir}" />
		<mkdir dir="${temp.site.dir}" />
	</target>


	<target name="all">
		<echo>
		サイト更新手順

		1. リポジトリからビルド済みプラグインを取得
		$ ant -lib lib get.plugins

		2. フィーチャをビルド
		$ ant -lib lib build.features

		3. サイトを更新
		$ ant -lib lib deploy.site
		</echo>
	</target>

	<target name="get.plugins" depends="init.plugins" description="ビルド済プラグインをコピー">
		<copy todir="${temp.plugins.dir}">
			<fileset dir="${env.PLUGINS_DIR}" includes="**/*.jar" />
		</copy>
	</target>

	<target name="build.features" depends="init.features" description="フィーチャーのビルド">
		<antcall target="feature.copy.base">
			<param name="proj" value="${rtcb_feature.id}" />
		</antcall>
		<antcall target="feature.copy.base">
			<param name="proj" value="${rtcb_nl_feature.id}" />
		</antcall>

		<antcall target="feature.copy.base">
			<param name="proj" value="${rtse_feature.id}" />
		</antcall>
		<antcall target="feature.copy.base">
			<param name="proj" value="${rtse_nl_feature.id}" />
		</antcall>

		<antcall target="feature.build.rtcb" />
		<antcall target="feature.build.rtcb_nl" />

		<antcall target="feature.build.rtse" />
		<antcall target="feature.build.rtse_nl" />

		<antcall target="feature.sign" />
	</target>

	<target name="deploy.site" depends="init.site" description="サイトへの配置">
		<tstamp />
		<copy file="${site_proj.dir}/site.xml" tofile="backup/site-${DSTAMP}-${TSTAMP}.xml" />
		<copy file="${site_proj.dir}/site.xml" tofile="${temp.site.dir}/site.xml" />

		<antcall target="site.add.rtcb" />
		<antcall target="site.add.rtcb_nl" />

		<antcall target="site.add.rtse" />
		<antcall target="site.add.rtse_nl" />

		<mkdir dir="${site_proj.dir}/features" />
		<copy todir="${site_proj.dir}/features">
			<fileset dir="${temp.features.dir}" includes="**/*.jar" />
		</copy>

		<mkdir dir="${site_proj.dir}/plugins" />
		<copy todir="${site_proj.dir}/plugins">
			<fileset dir="${temp.plugins.dir}" includes="**/*.jar" />
		</copy>

		<copy file="${temp.site.dir}/site.xml" tofile="${site_proj.dir}/site.xml" overwrite="true" />

		<antcall target="create.p2">
			<param name="update_site.dir" value="${site_proj.dir}" />
		</antcall>
	</target>

	<target name="clean" description="中間生成ファイルの削除">
		<delete dir="${temp.plugins.dir}" quiet="true" />
		<delete dir="${temp.features.dir}" quiet="true" />
		<delete dir="${temp.site.dir}" quiet="true" />
		<delete dir="${temp.build.dir}" quiet="true" />
		<delete dir="${temp.backup.dir}" quiet="true" />
		<delete dir="${site_proj.plugins.dir}" quiet="true" />
		<delete dir="${site_proj.features.dir}" quiet="true" />
		<delete includeEmptyDirs="true" quiet="true">
			<fileset dir="." includes="**/*.log" />
			<fileset dir="${site_proj.dir}" includes="**/*.jar" />
			<fileset dir="conf" includes="**/*.keystore" />
		</delete>
	</target>


	<target name="feature.copy.base">
		<mkdir dir="${temp.features.dir}/${proj}" />
		<copy todir="${temp.features.dir}/${proj}">
			<fileset dir="${proj}" />
		</copy>
	</target>

	<!-- フィーチャーをビルド: RTCBuilder -->
	<target name="feature.build.rtcb">
		<property name="feature.id" value="${rtcb_feature.id}" />
		<property name="main.plugin.id" value="${rtcb_plugin.id}" />
		<property name="plugins.list" value="${rtcb_feature.plugins.list}" />

		<property name="feature.xml" value="${temp.features.dir}/${feature.id}/feature.xml" />
		<property name="temp.feature.xml" value="${temp.features.dir}/${feature.id}/temp.feature.xml" />

		<!-- メインプラグインのバージョンをフィーチャのバージョンに設定 -->
		<fileset dir="${temp.plugins.dir}" id="mid" includes="${main.plugin.id}_*.jar" />
		<pathconvert property="mpath" refid="mid" />
		<basename property="main.plugin.name" file="${mpath}" suffix="jar" />

		<script language="javascript">
		<![CDATA[
			var id = project.getProperty("main.plugin.id");
			var name = project.getProperty("main.plugin.name");
			var version = name.replace(id + "_", "");
			project.setProperty("main.plugin.version", version);
		]]></script>

		<echo message="main.plugin.id=${main.plugin.id}" />
		<echo message="main.plugin.version=${main.plugin.version}" />

		<property name="feature.name" value="${feature.id}_${main.plugin.version}" />
		<property name="feature.version" value="${main.plugin.version}" />

		<copy file="${feature.xml}" tofile="${temp.feature.xml}" overwrite="true" />
		<xmltask source="${temp.feature.xml}" dest="${feature.xml}" encoding="utf-8" report="false">
			<attr path="feature" attr="version" value="${feature.version}" />
		</xmltask>

		<!-- プラグインのバージョン設定 -->
		<for param="plugin.id" list="${plugins.list}" trim="true">
			<sequential>
				<copy file="${feature.xml}" tofile="${temp.feature.xml}" overwrite="true" />
				<antcall target="feature.replace.plugin">
					<param name="plugin.id" value="@{plugin.id}" />
					<param name="from.xml" value="${temp.feature.xml}" />
					<param name="to.xml" value="${feature.xml}" />
				</antcall>
			</sequential>
		</for>

		<jar jarfile="${temp.features.dir}/${feature.name}.jar"
				basedir="${temp.features.dir}/${feature.id}"
				includes="feature.xml" />
	</target>

	<!-- フィーチャーをビルド: RTCBuilder Language Pack -->
	<target name="feature.build.rtcb_nl">
		<property name="feature.id" value="${rtcb_nl_feature.id}" />
		<property name="parent.feature.id" value="${rtcb_feature.id}" />
		<property name="main.plugin.id" value="${rtcb_nl_plugin.id}" />
		<property name="parent.plugin.id" value="${rtcb_plugin.id}" />
		<property name="plugins.list" value="${rtcb_nl_feature.plugins.list}" />

		<property name="feature.xml" value="${temp.features.dir}/${feature.id}/feature.xml" />
		<property name="temp.feature.xml" value="${temp.features.dir}/${feature.id}/temp.feature.xml" />

		<!-- メインプラグインのバージョンをフィーチャのバージョンに設定 -->
		<fileset dir="${temp.plugins.dir}" id="mid" includes="${main.plugin.id}_*.jar" />
		<pathconvert property="mpath" refid="mid" />
		<basename property="main.plugin.name" file="${mpath}" suffix="jar" />

		<script language="javascript">
		<![CDATA[
			var id = project.getProperty("main.plugin.id");
			var name = project.getProperty("main.plugin.name");
			var version = name.replace(id + "_", "");
			project.setProperty("main.plugin.version", version);
		]]></script>

		<echo message="main.plugin.id=${main.plugin.id}" />
		<echo message="main.plugin.version=${main.plugin.version}" />

		<property name="feature.name" value="${feature.id}_${main.plugin.version}" />
		<property name="feature.version" value="${main.plugin.version}" />

		<copy file="${feature.xml}" tofile="${temp.feature.xml}" overwrite="true" />
		<xmltask source="${temp.feature.xml}" dest="${feature.xml}" encoding="utf-8" report="false">
			<attr path="feature" attr="version" value="${feature.version}" />
		</xmltask>

		<!-- 親フィーチャのバージョンを設定 -->
		<copy file="${feature.xml}" tofile="${temp.feature.xml}" overwrite="true" />
		<antcall target="feature.replace.require">
			<param name="parent.feature.id" value="${parent.feature.id}" />
			<param name="plugin.id" value="${parent.plugin.id}" />
			<param name="from.xml" value="${temp.feature.xml}" />
			<param name="to.xml" value="${feature.xml}" />
		</antcall>

		<!-- プラグインのバージョン設定 -->
		<for param="plugin.id" list="${plugins.list}" trim="true">
			<sequential>
				<copy file="${feature.xml}" tofile="${temp.feature.xml}" overwrite="true" />
				<antcall target="feature.replace.plugin">
					<param name="plugin.id" value="@{plugin.id}" />
					<param name="from.xml" value="${temp.feature.xml}" />
					<param name="to.xml" value="${feature.xml}" />
				</antcall>
			</sequential>
		</for>

		<jar jarfile="${temp.features.dir}/${feature.name}.jar"
				basedir="${temp.features.dir}/${feature.id}"
				includes="feature.xml" />
	</target>

	<!-- フィーチャーをビルド: RTSystemEditor -->
	<target name="feature.build.rtse">
		<property name="feature.id" value="${rtse_feature.id}" />
		<property name="main.plugin.id" value="${rtse_plugin.id}" />
		<property name="plugins.list" value="${rtse_feature.plugins.list}" />

		<property name="feature.xml" value="${temp.features.dir}/${feature.id}/feature.xml" />
		<property name="temp.feature.xml" value="${temp.features.dir}/${feature.id}/temp.feature.xml" />

		<!-- メインプラグインのバージョンをフィーチャのバージョンに設定 -->
		<fileset dir="${temp.plugins.dir}" id="mid" includes="${main.plugin.id}_*.jar" />
		<pathconvert property="mpath" refid="mid" />
		<basename property="main.plugin.name" file="${mpath}" suffix="jar" />

		<script language="javascript">
		<![CDATA[
			var id = project.getProperty("main.plugin.id");
			var name = project.getProperty("main.plugin.name");
			var version = name.replace(id + "_", "");
			project.setProperty("main.plugin.version", version);
		]]></script>

		<echo message="main.plugin.id=${main.plugin.id}" />
		<echo message="main.plugin.version=${main.plugin.version}" />

		<property name="feature.name" value="${feature.id}_${main.plugin.version}" />
		<property name="feature.version" value="${main.plugin.version}" />

		<copy file="${feature.xml}" tofile="${temp.feature.xml}" overwrite="true" />
		<xmltask source="${temp.feature.xml}" dest="${feature.xml}" encoding="utf-8" report="false">
			<attr path="feature" attr="version" value="${feature.version}" />
		</xmltask>

		<!-- プラグインのバージョン設定 -->
		<for param="plugin.id" list="${plugins.list}" trim="true">
			<sequential>
				<copy file="${feature.xml}" tofile="${temp.feature.xml}" overwrite="true" />
				<antcall target="feature.replace.plugin">
					<param name="plugin.id" value="@{plugin.id}" />
					<param name="from.xml" value="${temp.feature.xml}" />
					<param name="to.xml" value="${feature.xml}" />
				</antcall>
			</sequential>
		</for>

		<jar jarfile="${temp.features.dir}/${feature.name}.jar"
				basedir="${temp.features.dir}/${feature.id}"
				includes="feature.xml" />
	</target>

	<!-- フィーチャーをビルド: RTSystemEditor Language Pack -->
	<target name="feature.build.rtse_nl">
		<property name="feature.id" value="${rtse_nl_feature.id}" />
		<property name="parent.feature.id" value="${rtse_feature.id}" />
		<property name="main.plugin.id" value="${rtse_nl_plugin.id}" />
		<property name="parent.plugin.id" value="${rtse_plugin.id}" />
		<property name="plugins.list" value="${rtse_nl_feature.plugins.list}" />

		<property name="feature.xml" value="${temp.features.dir}/${feature.id}/feature.xml" />
		<property name="temp.feature.xml" value="${temp.features.dir}/${feature.id}/temp.feature.xml" />

		<!-- メインプラグインのバージョンをフィーチャのバージョンに設定 -->
		<fileset dir="${temp.plugins.dir}" id="mid" includes="${main.plugin.id}_*.jar" />
		<pathconvert property="mpath" refid="mid" />
		<basename property="main.plugin.name" file="${mpath}" suffix="jar" />

		<script language="javascript">
		<![CDATA[
			var id = project.getProperty("main.plugin.id");
			var name = project.getProperty("main.plugin.name");
			var version = name.replace(id + "_", "");
			project.setProperty("main.plugin.version", version);
		]]></script>

		<echo message="main.plugin.id=${main.plugin.id}" />
		<echo message="main.plugin.version=${main.plugin.version}" />

		<property name="feature.name" value="${feature.id}_${main.plugin.version}" />
		<property name="feature.version" value="${main.plugin.version}" />

		<copy file="${feature.xml}" tofile="${temp.feature.xml}" overwrite="true" />
		<xmltask source="${temp.feature.xml}" dest="${feature.xml}" encoding="utf-8" report="false">
			<attr path="feature" attr="version" value="${feature.version}" />
		</xmltask>

		<!-- 親フィーチャのバージョンを設定 -->
		<copy file="${feature.xml}" tofile="${temp.feature.xml}" overwrite="true" />
		<antcall target="feature.replace.require">
			<param name="parent.feature.id" value="${parent.feature.id}" />
			<param name="plugin.id" value="${parent.plugin.id}" />
			<param name="from.xml" value="${temp.feature.xml}" />
			<param name="to.xml" value="${feature.xml}" />
		</antcall>

		<!-- プラグインのバージョン設定 -->
		<for param="plugin.id" list="${plugins.list}" trim="true">
			<sequential>
				<copy file="${feature.xml}" tofile="${temp.feature.xml}" overwrite="true" />
				<antcall target="feature.replace.plugin">
					<param name="plugin.id" value="@{plugin.id}" />
					<param name="from.xml" value="${temp.feature.xml}" />
					<param name="to.xml" value="${feature.xml}" />
				</antcall>
			</sequential>
		</for>

		<jar jarfile="${temp.features.dir}/${feature.name}.jar"
				basedir="${temp.features.dir}/${feature.id}"
				includes="feature.xml" />
	</target>

	<!-- フィーチャのプラグイン情報を編集 -->
	<target name="feature.replace.plugin">
		<fileset dir="${temp.plugins.dir}" id="pid" includes="${plugin.id}_*.jar" />
		<pathconvert property="path" refid="pid" />
		<basename property="plugin.name" file="${path}" suffix="jar" />

		<length file="${path}" property="plugin.size" />

		<script language="javascript">
		<![CDATA[
			var id = project.getProperty("plugin.id");
			var name = project.getProperty("plugin.name");
			var version = name.replace(id + "_", "");
			project.setProperty("plugin.version", version);
		]]></script>

		<echo message="plugin.id=${plugin.id}" />
		<echo message="plugin.name=${plugin.name}" />
		<echo message="plugin.size=${plugin.size}" />
		<echo message="plugin.version=${plugin.version}" />

		<xmltask source="${from.xml}" dest="${to.xml}" encoding="utf-8" report="false">
			<attr path="feature/plugin[@id='${plugin.id}']" attr="version" value="${plugin.version}" />
			<attr path="feature/plugin[@id='${plugin.id}']" attr="download-size" value="${plugin.size}" />
		</xmltask>
	</target>

	<!-- 依存フィーチャ情報を編集 -->
	<target name="feature.replace.require">
		<!-- 親フィーチャのバージョンをメインプラグインから取得 -->
		<fileset dir="${temp.plugins.dir}" id="pid" includes="${plugin.id}_*.jar" />
		<pathconvert property="path" refid="pid" />
		<basename property="plugin.name" file="${path}" suffix="jar" />

		<script language="javascript">
		<![CDATA[
			var id = project.getProperty("plugin.id");
			var name = project.getProperty("plugin.name");
			var version = name.replace(id + "_", "");
			project.setProperty("parent.feature.version", version);
		]]></script>

		<echo message="parent.feature.id=${parent.feature.id}" />
		<echo message="parent.feature.version=${parent.feature.version}" />

		<xmltask source="${from.xml}" dest="${to.xml}" encoding="utf-8" report="false">
			<attr path="feature/requires/import[@feature='${parent.feature.id}']" attr="version" value="${parent.feature.version}" />
		</xmltask>
	</target>

	<!-- フィーチャ/プラグインへの署名 -->
	<target name="feature.sign">
		<signjar keystore="${signature.keystore}" alias="${signature.alias}"
			keypass="${signature.keypass}" storepass="${signature.storepass}">
			<path>
				<fileset dir="${temp.features.dir}" includes="**/*.jar" />
				<fileset dir="${temp.plugins.dir}" includes="**/*.jar" />
			</path>
		</signjar>
	</target>

	<target name="feature.sign.gen" description="署名ファイルの作成">
		<delete file="${signature.keystore}" />
		<genkey keystore="${signature.keystore}" alias="${signature.alias}"
			keypass="${signature.keypass}" storepass="${signature.storepass}"
			validity="${signature.validity}" dname="${signature.dname}" />
		<exec executable="keytool" failifexecutionfails="false">
			<arg value="-list" />
			<arg value="-v" />
			<arg value="-keystore" />
			<arg value="${signature.keystore}" />
			<arg value="-storepass" />
			<arg value="${signature.storepass}" />
		</exec>
	</target>


	<!-- サイトへ配置: RTCBulider -->
	<target name="site.add.rtcb">
		<antcall target="site.add.feature">
			<param name="feature.id" value="${rtcb_feature.id}" />
		</antcall>
	</target>

	<!-- サイトへ配置: RTCbuilder Language Pack -->
	<target name="site.add.rtcb_nl">
		<antcall target="site.add.feature">
			<param name="feature.id" value="${rtcb_nl_feature.id}" />
		</antcall>
	</target>

	<!-- サイトへ配置: RTSystemEditor -->
	<target name="site.add.rtse">
		<antcall target="site.add.feature">
			<param name="feature.id" value="${rtse_feature.id}" />
		</antcall>
	</target>

	<!-- サイトへ配置: RTSystemEditor Language Pack -->
	<target name="site.add.rtse_nl">
		<antcall target="site.add.feature">
			<param name="feature.id" value="${rtse_nl_feature.id}" />
		</antcall>
	</target>

	<!-- サイト情報を編集 -->
	<target name="site.add.feature">
		<fileset dir="${temp.features.dir}" id="fid" includes="${feature.id}_*.jar" />
		<pathconvert property="fpath" refid="fid" />
		<basename property="feature.name" file="${fpath}" suffix="jar" />

		<property name="site.xml" value="${temp.site.dir}/site.xml" />
		<property name="temp.site.xml" value="${temp.site.dir}/temp.site.xml" />

		<copy file="${site.xml}" tofile="${temp.site.xml}" overwrite="true" />

		<antcall target="site.add.feature.byname">
			<param name="feature.name" value="${feature.name}" />
			<param name="from.xml" value="${temp.site.xml}" />
			<param name="to.xml" value="${site.xml}" />
		</antcall>
	</target>

	<target name="site.add.feature.byname">
		<script language="javascript">
		<![CDATA[
			var name = project.getProperty("feature.name");
			name = name.replace(".jar", "");
			var s = name.split("_");
			project.setProperty("feature.id", s[0] || "");
			project.setProperty("feature.version", s[1] || "");
			var ver = project.getProperty("feature.version");
			var i = ver.lastIndexOf(".");
			var mver = ver.substring(0, i);
			var bver = ver.substring(i + 1);
			project.setProperty("feature.version.main", mver);
			project.setProperty("feature.version.build", bver);
		]]></script>

		<echo message="feature.name=${feature.name}" />
		<echo message="feature.id=${feature.id}" />
		<echo message="feature.version=${feature.version}" />
		<echo message="feature.version.main=${feature.version.main}" />
		<echo message="feature.version.build=${feature.version.build}" />

		<xslt in="${from.xml}" out="${to.xml}" style="conf/site_add_feature.xslt" force="true">
			<param name="feature.name" expression="${feature.name}" />
			<param name="feature.id" expression="${feature.id}" />
			<param name="feature.version" expression="${feature.version}" />
			<param name="feature.version.main" expression="${feature.version.main}" />
			<param name="feature.version.build" expression="${feature.version.build}" />
		</xslt>
	</target>

	<!-- p2 metadata の生成 -->
	<target name="create.p2">
		<property name="update_site.dir" value="${site_proj.dir}" />

		<fileset dir="${env.ECLIPSE_HOME}/plugins" id="lid" includes="${launcher.id}_*.jar" />
		<pathconvert property="lpath" refid="lid" />
		<basename property="lname" file="${lpath}" />
		<property name="launcher.jar" value="${env.ECLIPSE_HOME}/plugins/${lname}" />
		<echo message="launcher.id=${launcher.id}" />
		<echo message="launcher.jar=${launcher.jar}" />

		<delete file="${update_site.dir}/artifacts.jar" />
		<delete file="${update_site.dir}/content.jar" />
		<java jar="${launcher.jar}" fork="true" failonerror="true" maxmemory="256m">
			<arg line="org.eclipse.equinox.launcher.Main" />
			<arg line="-application org.eclipse.equinox.p2.publisher.FeaturesAndBundlesPublisher" />
			<arg line="-source ${update_site.dir}" />
			<arg line="-metadataRepository file://${update_site.dir}" />
			<arg line="-artifactRepository file://${update_site.dir}" />
			<arg line="-publishArtifacts -compress" />
			
		</java>

		<java jar="${launcher.jar}" fork="true" failonerror="true" maxmemory="256m">
			<arg line="org.eclipse.equinox.launcher.Main" />
			<arg line="-application org.eclipse.equinox.p2.publisher.CategoryPublisher" />
			<arg line="-metadataRepository file://${update_site.dir}" />
			<arg line="-categoryDefinition file://${update_site.dir}/site.xml" />
			<arg line="-compress -categoryQualifier" />
			
		</java>
	</target>

</project>

