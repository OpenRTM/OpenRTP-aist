openrtm_ms = require "openrtm_ms"


--[[
--!  @file ${idlFileParam.idlFileNoExt}_idl_examplefile.py
--!  @brief Lua example implementations generated from ${idlFileParam.idlFile}
#set( $Date$ = "dummy" )
--!  @date \$Date$

#if( ${rtcParam.docCreator.length()} > 0 )
--!  @author ${tmpltHelperLua.convertAuthorDocLua(${rtcParam.docCreator})}
#end
#if( ${rtcParam.docLicense.length()} > 0 )

--!  ${tmpltHelperLua.convertDocLua(${rtcParam.docLicense})}
#end

--]]


${idlFileParam.idlFileNoExt}_idl_example = {}


#foreach($serviceClassParam in ${idlFileParam.serviceClassParams})


class ${idlFileParam.idlFileNoExt}_idl_example.${tmpltHelper.getBasename(${serviceClassParam.name})}_i
    new: () =>
        return
    --[[
    -- @class ${tmpltHelper.getBasename(${serviceClassParam.name})}_i
    -- Example class implementing IDL interface ${tmpltHelper.convFormat(${serviceClassParam.name})}
    --]]

    --[[
    -- @brief standard constructor
    -- Initialise member variables here
    --]]

#foreach($serviceMethodParam in ${serviceClassParam.methods})
    -- ${luaConv.convCORBA2LuaArg(${serviceMethodParam.type})} ${serviceMethodParam.name}(#foreach($serviceArgumentParam in ${serviceMethodParam.arguments})#if($velocityCount > 1), #end${serviceArgumentParam.direction} ${luaConv.convCORBA2LuaArg(${serviceArgumentParam.type})} ${serviceArgumentParam.name}#end)
    ${serviceMethodParam.name}: (${luaConv.selectInParamName(${serviceMethodParam},${serviceClassParam})}) =>
        error(openrtm_ms.Manager\getORB()\newexcept{"CORBA::NO_IMPLEMENT",
              minor:0,
              completed:openrtm_ms.Manager\getORB().types\lookup("::CORBA::CompletionStatus").labelvalue.COMPLETED_NO})
        -- *** Implement me
        -- Must return:${luaConv.selectOutParamName(${serviceMethodParam},${serviceClassParam})}

#end

#end


return ${idlFileParam.idlFileNoExt}_idl_example
